'''
name:comparesimilarity.py
create date:8/23/2017
author:jimchen
function:a class that use hist to count the two images's similarity
'''


from PIL import Image
import matplotlib.image as mpimg

class histcomparesimilar(object):
	def __init__(self,regular_size,partial_size,radio):
		self.regular_size = regular_size
		self.partial_size = partial_size
		self.radio = radio

	def make_regalurimage(self,img):
		return img.resize(self.regular_size).convert('RGB')

	def split_image(self,img):
	    w, h = img.size
	    pw, ph = self.partial_size
	    assert w % pw == h % ph == 0
	    return [img.crop((i, j, i+pw, j+ph)).copy() \
	        for i in range(0, w, pw) \
	        for j in range(0, h, ph)]

	def hist_similar(self,lh, rh):
	    assert len(lh) == len(rh)
	    return sum(1 - (0 if l == r else float(abs(l - r))/max(l, r)) for l, r in zip(lh, rh))/len(lh)

	#use hist to compare two images
	def calc_histsimilar(self,li, ri):
	    return sum(self.hist_similar(l.histogram(), r.histogram()) for l, r in zip(self.split_image(li), self.split_image(ri))) / self.radio

	#compare two images similarity
	def calcsimilar_twoimages(self,lf,rf):
		#print("calcsimilar_twoimages lf:%s,rf:%s"%(lf,rf))
		image_lf=Image.open(lf)
		image_rf=Image.open(rf)
		li = self.make_regalurimage(image_lf)
		ri = self.make_regalurimage(image_rf)
		return self.calc_histsimilar(li,ri)
		
